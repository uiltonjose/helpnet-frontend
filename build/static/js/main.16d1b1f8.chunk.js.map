{"version":3,"sources":["registerServiceWorker.js","firebase.js","components/NavBar/LogoutModal.js","components/NavBar/NavBar.js","components/Home/Home.js","components/MyData/MyData.js","util/RequestUtil.js","util/Endpoints.js","util/AlertDialogUtil.js","components/SendNotification/SendNotification.js","components/ListNotification/ListNotification.js","components/ListOS/ListOS.js","components/Login/SignIn.js","components/Login/SignUp.js","components/Login/ForgotPassword.js","components/Errors/Error404.js","routes/index.js","index.js","App.js","components/Login/images/logo-default.png","imgs/logo-default.png"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","showModalLogout","history","confirmAlert","title","message","buttons","label","onClick","auth","signOut","localStorage","clear","push","logoutHandler","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isLogged","providerLogin","_this2","onAuthStateChanged","user","setItem","setState","savedUserInfo","getItem","JSON","parse","login","_this3","react_default","a","createElement","className","src","logo","alt","style","styles","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Link","to","Component","height","withRouter","$","document","ready","on","e","parent","addClass","siblings","removeClass","Home","userInfo","undefined","status","MyData","httpRequest","method","url","body","callback","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","responseText","response","open","setRequestHeader","send","stringify","getEndpoint","api","get","post","put","apis","listCustomerByProviderId","listNotificationsByProviderId","listOSsByProviderId","sendNotification","listProviders","addUser","updateUser","getUserInfo","showMessageOK","okListener","listCustomersByProviderIdAPI","Api","sendNotificationAPI","CheckboxTable","checkboxHOC","ReactTable","SendNotification","unavailableServiceAlert","loadCustomers","providerId","resp","customersAll","columns","getColumnsCustomers","customersFiltered","getDataCustomers","builderPushNotification","notification","customersSelected","selection","listCutomersId","forEach","_id","array","find","element","findArrayElementBy_id","tags","countProviderSelected","map","customer","tag","key","Ident","relation","value","or","customersParam","keys","length","accessor","Header","show","item","Chance","guid","objectSpread","sendMessage","errorMessage","bodyNotification","trim","scrollTo","result","messageAlert","code","reload","defaultFilter","filter","row","column","pivotId","String","toLowerCase","startsWith","toggleSelection","shift","toConsumableArray","keyIndex","indexOf","slice","concat","toggleAll","selectAll","checkboxTable","getWrappedInstance","getResolvedState","sortedData","_original","isSelected","includes","activeCustomersChecked","defaulterCustomersChecked","handleChangeTitle","bind","assertThisInitialized","handleChangeMessage","handleSubmit","event","target","preventDefault","_this$state","checkboxProps","selectType","getTrProps","s","r","backgroundColor","original","onSubmit","align","htmlFor","onChange","aria-describedby","placeholder","required","rows","assign","ref","filterable","defaultFilterMethod","minRows","data","previousText","nextText","defaultPageSize","loadingText","noDataText","pageText","ofText","rowsText","listNotificationsAPI","ListNotifications","loadNotifications","notificationsAll","getColumnsNotifications","notificationsFiltered","getDataNotifications","notificationsParam","date","Date","Data_de_Envio","formatToTimeZone","timeZone","ListNotification_CheckboxTable","ListOSs","loadOSs","ossAll","getColumnsOSs","ossFiltered","getDataOSs","ossParam","Data_Abertura","activeOSsChecked","defaulterOSsChecked","ListOS_CheckboxTable","SignIn","signInHandler","email","password","signInWithEmailAndPassword","encodeURI","errorCode","split","getUserInfoAPI","encodeURIComponent","userInfoData","pendingRegister","loadProviders","providers","providerContent","getElementById","selectList","appendChild","i","option","ID","text","NOME","handlerChooseProviderAndContinue","mySelect","selectedProvider","options","selectedIndex","userParams","userId","confirmationCode","provedorId","require","marginTop","marginLeft","textAlign","SignUp","signUpHandler","createUserWithEmailAndPassword","toString","ForgotPassword","forgotPasswordHandler","emailFilled","sendPasswordResetEmail","emailSent","goToSignPage","fontSize","Error404","AuthRoute","_ref","rest","objectWithoutProperties","Route","render","components_NavBar_NavBar","Login_SignIn","NonAuthRoute","_ref2","components_Home_Home","routes","BrowserRouter","Switch_default","routes_AuthRoute","exact","path","ListNotification","ListOS","routes_NonAuthRoute","component","Page404","ReactDOM","URL","process","origin","addEventListener","fetch","headers","unregister","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.16d1b1f8.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as firebase from \"firebase\";\n\nconst devConfig = {\n  apiKey: \"AIzaSyCxsIsHEq2QZOdSmrCG5LpQeqY-wQW5_u4\",\n  authDomain: \"helpnet-3a519.firebaseapp.com\",\n  databaseURL: \"https://helpnet-3a519.firebaseio.com\",\n  projectId: \"helpnet-3a519\",\n  storageBucket: \"helpnet-3a519.appspot.com\",\n  messagingSenderId: \"550379662303\"\n};\n\nconst prodConfig = {\n  apiKey: \"AIzaSyCca1EtJhC4p9OzuIppUuCFeMTFGb2d1L8\",\n  authDomain: \"helpnet-prod.firebaseapp.com\",\n  databaseURL: \"https://helpnet-prod.firebaseio.com\",\n  projectId: \"helpnet-prod\",\n  storageBucket: \"helpnet-prod.appspot.com\",\n  messagingSenderId: \"162656923160\"\n};\n\nconst isDevMode = true;\n\nexport const firebaseApp = firebase.initializeApp(\n  isDevMode ? devConfig : prodConfig\n);\n","import { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { firebaseApp } from \"../../firebase\";\n\nconst logoutHandler = history => {\n  firebaseApp\n    .auth()\n    .signOut()\n    .then(() => {\n      localStorage.clear();\n      history.push(\"/\");\n    });\n};\n\nexport const showModalLogout = history => {\n  confirmAlert({\n    title: \"\",\n    message: \"Tem certeza que deseja sair?\",\n    buttons: [\n      {\n        label: \"Sim\",\n        onClick: () => logoutHandler(history)\n      },\n      {\n        label: \"Não\",\n        onClick: () => console.log(\"close dialog\")\n      }\n    ]\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { showModalLogout } from \"./LogoutModal\";\nimport logo from \"../../imgs/logo-default.png\";\nimport $ from \"jquery\";\nimport { firebaseApp } from \"./../../firebase\";\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: false,\n      providerLogin: \"\"\n    };\n  }\n\n  componentWillMount() {\n    firebaseApp.auth().onAuthStateChanged(user => {\n      if (user) {\n        localStorage.setItem(\"isLogged\", true);\n        this.setState({ isLogged: true });\n      } else {\n        localStorage.setItem(\"isLogged\", false);\n        this.setState({ isLogged: false });\n      }\n    });\n\n    const savedUserInfo = localStorage.getItem(\"userInfo\");\n    const providerLogin = JSON.parse(savedUserInfo).login;\n    this.setState({ providerLogin });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.isLogged && (\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <img src={logo} alt=\"Help Net\" style={styles.logo} />\n\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarText\"\n              aria-controls=\"navbarText\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/home\"}>\n                    Home <span className=\"sr-only\">(current)</span>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/myData\"} id=\"as\">\n                    Meus Dados\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sendNotification\"}>\n                    Enviar Notificação\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/listNotification\"}>\n                    Listar Notificação\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/listOS\"}>\n                    Listar OS\n                  </Link>\n                </li>\n              </ul>\n              <div id=\"logout-group\">\n                <p id=\"providerLogin\">{this.state.providerLogin}</p>\n                <button\n                  id=\"logout-btn\"\n                  className=\"btn btn-outline-light my-2 my-sm-0\"\n                  onClick={() => showModalLogout(this.props.history)}\n                >\n                  Sair\n                </button>\n              </div>\n            </div>\n          </nav>\n        )}\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  logo: {\n    height: 1150\n  }\n};\n\nexport default withRouter(NavBar);\n\n$(document).ready(function() {\n  $(document).on(\"click\", \".nav-item a\", function(e) {\n    $(this)\n      .parent()\n      .addClass(\"active\")\n      .siblings()\n      .removeClass(\"active\");\n  });\n});\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { firebaseApp } from \"../../firebase\";\n\nclass Home extends Component {\n  componentWillMount() {\n    const savedUserInfo = localStorage.getItem(\"userInfo\");\n    const userInfo = JSON.parse(savedUserInfo);\n\n    if (!userInfo || userInfo === undefined || !(userInfo.status === \"Ativo\")) {\n      firebaseApp\n        .auth()\n        .signOut()\n        .then(() => {\n          localStorage.clear();\n          this.props.history.push(\"/\");\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"text-center\">\n          <h5 className=\"title\">Bem vindo ao Help Net!</h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React, { Component } from \"react\";\n\nclass MyData extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"text-center\">\n          <h5 className=\"title\">\n            Nesta tela serão exibidas as informações do provedor logado\n          </h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyData;\n","// This still not working. Needs an investigation.\n// require(\"dotenv\").config({ path: \"../.env\" });\n\n// const SERVER_HOST = \"http://localhost:4000/\";\nconst SERVER_HOST = \"https://helpnetws.herokuapp.com/\";\n// const SERVER_HOST = \"https://helpnetprod.herokuapp.com/\";\n\nconst createCORSRequest = (method, url) => {\n  return new XMLHttpRequest();\n  // let xhr = new XMLHttpRequest();\n\n  // if (\"withCredentials\" in xhr) {\n  //   // Check if the XMLHttpRequest object has a \"withCredentials\" property.\n  //   // \"withCredentials\" only exists on XMLHTTPRequest2 objects.\n  //   xhr.open(method, url, true);\n  // } else if (typeof XDomainRequest !== \"undefined\") {\n  //   // Otherwise, check if XDomainRequest.\n  //   // XDomainRequest only exists in IE, and is IE's way of making CORS requests.\n  //   xhr = new XDomainRequest();\n  //   xhr.open(method, url);\n  // } else {\n  //   // Otherwise, CORS is not supported by the browser.\n  //   xhr = null;\n  // }\n  // return xhr;\n};\n\n// export default SendNotification;\n\nconst httpRequest = (method, url, body, callback) => {\n  console.log(url);\n  const xmlHttp = createCORSRequest(method, url);\n  xmlHttp.onreadystatechange = () => {\n    if (xmlHttp.readyState === 4) {\n      if (xmlHttp.status === 200) {\n        callback(xmlHttp.responseText);\n      } else {\n        callback(xmlHttp.response);\n      }\n    }\n  };\n  xmlHttp.open(method, url, true); // true for asynchronous\n  xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n  xmlHttp.send(JSON.stringify(body));\n};\n\nconst getEndpoint = api => {\n  return SERVER_HOST + api;\n};\n\nexport const get = (url, callback) => {\n  httpRequest(\"GET\", getEndpoint(url), null, callback);\n};\n\nexport const post = (url, body, callback) => {\n  httpRequest(\"POST\", getEndpoint(url), body, callback);\n};\n\nexport const put = (url, body, callback) => {\n  httpRequest(\"PUT\", getEndpoint(url), body, callback);\n};\n","const apis = {\n  listCustomerByProviderId: \"api/customer/listByProviderId?providerId=\",\n  listNotificationsByProviderId:\n    \"api/notification/listByProviderId?providerId=\",\n  listOSsByProviderId: \"api/os/listByProviderId?providerId=\",\n  sendNotification: \"api/notification/sendNotification\",\n  listProviders: \"api/provider/listProviders\",\n  addUser: \"api/user/add\",\n  updateUser: \"api/user/updateStatus\",\n  getUserInfo: \"api/user/info?userLogin=\"\n};\n\nexport default apis;\n","import { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nexport const showMessageOKCancel = (\n  title,\n  message,\n  okListener,\n  cancelLister\n) => {\n  confirmAlert({\n    title: title,\n    message: message,\n    buttons: [\n      {\n        label: \"Sim\",\n        onClick: () => okListener()\n      },\n      {\n        label: \"Não\",\n        onClick: () => cancelLister()\n      }\n    ]\n  });\n};\n\nexport const showMessageOK = (title, message, okListener) => {\n  confirmAlert({\n    title: title,\n    message: message,\n    buttons: [\n      {\n        label: \"Ok\",\n        onClick: () => okListener()\n      }\n    ]\n  });\n};\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport checkboxHOC from \"react-table/lib/hoc/selectTable\";\nimport Chance from \"chance\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-table/react-table.css\";\nimport \"rc-checkbox/assets/index.css\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nimport { get, post } from \"../../util/RequestUtil\";\nimport Api from \"../../util/Endpoints\";\n\nimport { showMessageOK } from \"../../util/AlertDialogUtil\";\n\nconst listCustomersByProviderIdAPI = Api.listCustomerByProviderId;\nconst sendNotificationAPI = Api.sendNotification;\nconst CheckboxTable = checkboxHOC(ReactTable);\n\nclass SendNotification extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      message: \"\",\n      selection: [],\n      selectAll: false,\n      activeCustomersChecked: \"S\",\n      defaulterCustomersChecked: \"S\",\n      errorMessage: \"\",\n      providerId: \"\"\n    };\n\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\n    this.handleChangeMessage = this.handleChangeMessage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  unavailableServiceAlert = () => {\n    confirmAlert({\n      title: \"\",\n      message:\n        \"O serviço está indisponível, por favor tente novamente. Caso o problema volte ocorrer, entre em contato com o suporte.\",\n      buttons: [\n        {\n          label: \"OK\",\n          onClick: () => console.log(\"Connection refusied\")\n        }\n      ]\n    });\n  };\n\n  componentWillMount() {\n    const savedUserInfo = localStorage.getItem(\"userInfo\");\n    const userInfo = JSON.parse(savedUserInfo);\n    this.setState({ userInfo });\n  }\n\n  componentDidMount() {\n    this.loadCustomers();\n  }\n\n  loadCustomers = () => {\n    const providerId = this.state.userInfo[\"provedor_id\"];\n    this.setState({ providerId });\n    const url = listCustomersByProviderIdAPI + providerId;\n    get(url, resp => {\n      if (resp !== \"\") {\n        const customersAll = JSON.parse(resp);\n        const columns = this.getColumnsCustomers(customersAll);\n        const customersFiltered = this.getDataCustomers(customersAll);\n        this.setState({\n          customersFiltered,\n          columns\n        });\n      } else {\n        this.unavailableServiceAlert();\n      }\n    });\n  };\n\n  builderPushNotification = () => {\n    let notification = {};\n    notification.title = this.state.title;\n    notification.message = this.state.message;\n    let customersSelected = this.state.selection;\n    let customersFiltered = this.state.customersFiltered;\n    let listCutomersId = [];\n\n    customersSelected.forEach(_id => {\n      listCutomersId.push(findArrayElementBy_id(customersFiltered, _id));\n    });\n\n    function findArrayElementBy_id(array, _id) {\n      return array.find(element => {\n        return element._id === _id;\n      });\n    }\n\n    let tags = [];\n    let countProviderSelected = 0;\n\n    listCutomersId.map(customer => {\n      console.log(\"PROVIDER SELECTED\", this.state.providerId);\n      const tag = {};\n      tag.key = this.state.providerId + \"_\" + customer.Ident;\n      tag.relation = \"=\";\n      tag.value = \"1\";\n      if (countProviderSelected > 0) {\n        const or = {};\n        or.operator = \"OR\";\n        tags.push(or);\n      }\n      countProviderSelected++;\n      return tags.push(tag);\n    });\n    notification.tags = tags;\n\n    return notification;\n  };\n\n  getColumnsCustomers = customersParam => {\n    const columns = [];\n    if (Object.keys(customersParam).length > 0) {\n      Object.keys(customersParam[0]).forEach(key => {\n        if (key !== \"_id\") {\n          if (key === \"Ident\") {\n            columns.push({\n              accessor: key,\n              Header: key,\n              show: false\n            });\n          } else {\n            columns.push({\n              accessor: key,\n              Header: key\n            });\n          }\n        }\n      });\n    }\n    return columns;\n  };\n\n  getDataCustomers = customersParam => {\n    const data = customersParam.map(item => {\n      const _id = new Chance().guid();\n      return {\n        _id,\n        ...item\n      };\n    });\n    return data;\n  };\n\n  sendMessage = () => {\n    this.setState({ errorMessage: \"\" });\n    let errorMessage = \"\";\n    let bodyNotification = this.builderPushNotification();\n\n    if (\n      bodyNotification.tags === \"undefined\" ||\n      bodyNotification.tags.length === 0\n    ) {\n      errorMessage = \"* Pelo menos um cliente precisa ser selecionado.\";\n    }\n    if (\n      bodyNotification.title === \"undefined\" ||\n      bodyNotification.title.trim() === \"\"\n    ) {\n      if (errorMessage.length > 0) {\n        errorMessage += \"\\n\";\n      }\n      errorMessage += \"* O campo título precisa ser informado\";\n    }\n\n    if (\n      bodyNotification.message === \"undefined\" ||\n      bodyNotification.message.trim() === \"\"\n    ) {\n      if (errorMessage.length > 0) {\n        errorMessage += \"\\n\";\n      }\n      errorMessage += \"* O campo Conteúdo precisa ser informado\";\n    }\n    if (errorMessage.length > 0) {\n      this.setState({ errorMessage });\n      window.scrollTo(0, 0);\n    } else {\n      post(sendNotificationAPI, bodyNotification, function(resp) {\n        const result = JSON.parse(resp);\n        let messageAlert = \"\";\n        if (result.code === 200) {\n          messageAlert = \"Notificações enviadas com sucesso.\";\n        } else if (result.code === 406) {\n          messageAlert =\n            \"Um ou mais clientes não estão logados no Aplicativo, apenas usuários logados conseguem receber as notificações em forma de Push. Porém a mensagem será exibida na tela de notificação.\";\n        } else {\n          messageAlert =\n            \"Erro ao tentar enviar notificações, por favor tente novamente.\";\n        }\n        showMessageOK(\"\", messageAlert, () => {\n          window.location.reload();\n        });\n      });\n    }\n  };\n\n  handleChangeTitle(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleChangeMessage(event) {\n    this.setState({ message: event.target.value });\n  }\n\n  handleSubmit(event) {\n    this.builderPushNotification();\n    event.preventDefault();\n  }\n\n  defaultFilter = (filter, row, column) => {\n    const id = filter.pivotId || filter.id;\n    return row[id] !== undefined\n      ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\n      : true;\n  };\n\n  toggleSelection = (key, shift, row) => {\n    // start off with the existing state\n    let selection = [...this.state.selection];\n    const keyIndex = selection.indexOf(key);\n    // check to see if the key exists\n    if (keyIndex >= 0) {\n      // it does exist so we will remove it using destructing\n      selection = [\n        ...selection.slice(0, keyIndex),\n        ...selection.slice(keyIndex + 1)\n      ];\n    } else {\n      // it does not exist so add it\n      selection.push(key);\n    }\n    // update the state\n    this.setState({ selection });\n  };\n\n  toggleAll = () => {\n    const selectAll = this.state.selectAll ? false : true;\n    const selection = [];\n    if (selectAll) {\n      // we need to get at the internals of ReactTable\n      const wrappedInstance = this.checkboxTable.getWrappedInstance();\n      // the 'sortedData' property contains the currently accessible records based on the filter and sort\n      const currentRecords = wrappedInstance.getResolvedState().sortedData;\n      // we just push all the IDs onto the selection array\n      currentRecords.forEach(item => {\n        selection.push(item._original._id);\n      });\n    }\n    this.setState({ selectAll, selection });\n  };\n\n  isSelected = key => {\n    return this.state.selection.includes(key);\n  };\n\n  render() {\n    const { toggleSelection, toggleAll, isSelected } = this;\n    let { columns, selectAll } = this.state;\n    if (typeof columns === \"undefined\") {\n      columns = [];\n    }\n    const checkboxProps = {\n      selectAll,\n      isSelected,\n      toggleSelection,\n      toggleAll,\n      selectType: \"checkbox\",\n      getTrProps: (s, r) => {\n        const selected = this.isSelected(r.original._id);\n        return {\n          style: {\n            backgroundColor: selected ? \"lightgreen\" : \"inherit\"\n          }\n        };\n      }\n    };\n\n    return (\n      <form id=\"formQuestion\" onSubmit={this.handleSubmit}>\n        {this.state.errorMessage && (\n          <div className=\"alert alert-danger display-linebreak\">\n            {this.state.errorMessage}\n          </div>\n        )}\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h4 className=\"title bold\">Envio de mensagens para clientes</h4>\n          </div>\n          <div>\n            <div align=\"right\" className=\"topnav search-container\">\n              <button\n                onClick={this.sendMessage}\n                type=\"button\"\n                id=\"buttonAction\"\n                className=\"btn btn-primary\"\n              >\n                {\"Enviar Mensagem\"}\n              </button>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"wrapper right\">\n              <div className=\"right\" />\n            </div>\n          </div>\n          <div className=\"container\">\n            <div className=\"form-group bold\">\n              <label htmlFor=\"title\">Título</label>\n              <input\n                value={this.state.title}\n                onChange={this.handleChangeTitle}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"titleModal\"\n                aria-describedby=\"titleHelp\"\n                placeholder=\"Informe o título da mensagens\"\n                required\n              />\n              <small id=\"titlelHelp\" className=\"form-text text-muted\">\n                * Esta informação é obrigatória, informe o assunto da mensagem\n              </small>\n            </div>\n            <div className=\"form-group bold\">\n              <label htmlFor=\"conteudoThree\">Conteúdo</label>\n              <textarea\n                value={this.state.message}\n                onChange={this.handleChangeMessage}\n                rows=\"3\"\n                className=\"form-control\"\n                id=\"conteudoModal\"\n                aria-describedby=\"conteudoHelp\"\n                placeholder=\"Informe o conteúdo da mensagem\"\n                required\n              />\n              <small id=\"conteudoHelp\" className=\"form-text text-muted\">\n                * Esta informação é obrigatória, informe a mensagem que será\n                enviada\n              </small>\n            </div>\n            <CheckboxTable\n              ref={r => (this.checkboxTable = r)}\n              filterable={true}\n              defaultFilterMethod={this.defaultFilter}\n              minRows={0}\n              data={this.state.customersFiltered}\n              columns={columns}\n              {...checkboxProps}\n              previousText={\"Anterior\"}\n              nextText={\"Próximo\"}\n              defaultPageSize={10}\n              loadingText={\"Carregando...\"}\n              noDataText={\"Lista vazia.\"}\n              pageText={\"Página\"}\n              ofText={\"de\"}\n              rowsText={\"linhas\"}\n            />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SendNotification;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport checkboxHOC from \"react-table/lib/hoc/selectTable\";\nimport Chance from \"chance\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-table/react-table.css\";\nimport \"rc-checkbox/assets/index.css\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { formatToTimeZone } from \"date-fns-timezone\";\n\nimport { get } from \"../../util/RequestUtil\";\nimport Api from \"../../util/Endpoints\";\n\nconst listNotificationsAPI = Api.listNotificationsByProviderId;\nconst CheckboxTable = checkboxHOC(ReactTable);\n\nclass ListNotifications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      selection: [],\n      selectAll: false,\n      errorMessage: \"\",\n      providerId: \"\"\n    };\n  }\n\n  unavailableServiceAlert = () => {\n    confirmAlert({\n      title: \"\",\n      message:\n        \"O serviço está indisponível, por favor tente novamente. Caso o problema volte ocorrer, entre em contato com o suporte.\",\n      buttons: [\n        {\n          label: \"OK\",\n          onClick: () => console.log(\"Connection refusied\")\n        }\n      ]\n    });\n  };\n\n  componentWillMount() {\n    const savedUserInfo = localStorage.getItem(\"userInfo\");\n    const userInfo = JSON.parse(savedUserInfo);\n    this.setState({ userInfo });\n  }\n\n  componentDidMount() {\n    this.loadNotifications();\n  }\n\n  loadNotifications = () => {\n    const providerId = this.state.userInfo[\"provedor_id\"];\n    this.setState({ providerId });\n    const url = listNotificationsAPI + providerId;\n    get(url, resp => {\n      if (resp !== \"\") {\n        const notificationsAll = JSON.parse(resp);\n        const columns = this.getColumnsNotifications(notificationsAll);\n        const notificationsFiltered = this.getDataNotifications(\n          notificationsAll\n        );\n        this.setState({\n          notificationsFiltered,\n          columns\n        });\n      } else {\n        this.unavailableServiceAlert();\n      }\n    });\n  };\n\n  getColumnsNotifications = notificationsParam => {\n    const columns = [];\n    if (Object.keys(notificationsParam).length > 0) {\n      Object.keys(notificationsParam.data[0]).forEach(key => {\n        if (key !== \"_id\") {\n          columns.push({\n            accessor: key,\n            Header: key\n          });\n        }\n      });\n    }\n    return columns;\n  };\n\n  getDataNotifications = notificationsParam => {\n    const data = notificationsParam.data.map(item => {\n      const _id = new Chance().guid();\n\n      const date = new Date(item.Data_de_Envio);\n      const formatTemplate = \"DD-MM-YYYY HH:mm\";\n      const timeZone = { timeZone: \"America/Recife\" }; //TODO: The Improvement is to get timezone from the Server.\n\n      item.Data_de_Envio = formatToTimeZone(date, formatTemplate, timeZone);\n\n      return {\n        _id,\n        ...item\n      };\n    });\n    return data;\n  };\n\n  defaultFilter = (filter, row, column) => {\n    const id = filter.pivotId || filter.id;\n    return row[id] !== undefined\n      ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\n      : true;\n  };\n\n  toggleSelection = (key, shift, row) => {\n    // start off with the existing state\n    let selection = [...this.state.selection];\n    const keyIndex = selection.indexOf(key);\n    // check to see if the key exists\n    if (keyIndex >= 0) {\n      // it does exist so we will remove it using destructing\n      selection = [\n        ...selection.slice(0, keyIndex),\n        ...selection.slice(keyIndex + 1)\n      ];\n    } else {\n      // it does not exist so add it\n      selection.push(key);\n    }\n    // update the state\n    this.setState({ selection });\n  };\n\n  toggleAll = () => {\n    const selectAll = this.state.selectAll ? false : true;\n    const selection = [];\n    if (selectAll) {\n      // we need to get at the internals of ReactTable\n      const wrappedInstance = this.checkboxTable.getWrappedInstance();\n      // the 'sortedData' property contains the currently accessible records based on the filter and sort\n      const currentRecords = wrappedInstance.getResolvedState().sortedData;\n      // we just push all the IDs onto the selection array\n      currentRecords.forEach(item => {\n        selection.push(item._original._id);\n      });\n    }\n    this.setState({ selectAll, selection });\n  };\n\n  isSelected = key => {\n    return this.state.selection.includes(key);\n  };\n\n  render() {\n    const { toggleSelection, toggleAll, isSelected } = this;\n    let { columns, selectAll } = this.state;\n    if (typeof columns === \"undefined\") {\n      columns = [];\n    }\n    const checkboxProps = {\n      selectAll,\n      isSelected,\n      toggleSelection,\n      toggleAll,\n      selectType: \"checkbox\"\n    };\n\n    return (\n      <form id=\"formQuestion\" onSubmit={this.handleSubmit}>\n        {this.state.errorMessage && (\n          <div className=\"alert alert-danger display-linebreak\">\n            {this.state.errorMessage}\n          </div>\n        )}\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h4 className=\"title bold\">Notificações enviadas</h4>\n          </div>\n          <CheckboxTable\n            ref={r => (this.checkboxTable = r)}\n            filterable={true}\n            defaultFilterMethod={this.defaultFilter}\n            minRows={0}\n            data={this.state.notificationsFiltered}\n            columns={columns}\n            {...checkboxProps}\n            previousText={\"Anterior\"}\n            nextText={\"Próximo\"}\n            defaultPageSize={10}\n            loadingText={\"Carregando...\"}\n            noDataText={\"Lista vazia.\"}\n            pageText={\"Página\"}\n            ofText={\"de\"}\n            rowsText={\"linhas\"}\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ListNotifications;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport checkboxHOC from \"react-table/lib/hoc/selectTable\";\nimport Chance from \"chance\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-table/react-table.css\";\nimport \"rc-checkbox/assets/index.css\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { formatToTimeZone } from \"date-fns-timezone\";\n\nimport { get } from \"../../util/RequestUtil\";\nimport Api from \"../../util/Endpoints\";\n\nconst listOSsByProviderId = Api.listOSsByProviderId;\nconst CheckboxTable = checkboxHOC(ReactTable);\n\nclass ListOSs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      selection: [],\n      selectAll: false,\n      activeOSsChecked: \"S\",\n      defaulterOSsChecked: \"S\",\n      errorMessage: \"\",\n      providerId: \"\"\n    };\n  }\n\n  unavailableServiceAlert = () => {\n    confirmAlert({\n      title: \"\",\n      message:\n        \"O serviço está indisponível, por favor tente novamente. Caso o problema volte ocorrer, entre em contato com o suporte.\",\n      buttons: [\n        {\n          label: \"OK\",\n          onClick: () => console.log(\"Connection refusied\")\n        }\n      ]\n    });\n  };\n\n  componentWillMount() {\n    const savedUserInfo = localStorage.getItem(\"userInfo\");\n    const userInfo = JSON.parse(savedUserInfo);\n    this.setState({ userInfo });\n  }\n\n  componentDidMount() {\n    this.loadOSs();\n  }\n\n  loadOSs = () => {\n    const providerId = this.state.userInfo[\"provedor_id\"];\n    this.setState({ providerId });\n    const url = listOSsByProviderId + providerId;\n    get(url, resp => {\n      if (resp !== \"\") {\n        const ossAll = JSON.parse(resp);\n        const columns = this.getColumnsOSs(ossAll);\n        const ossFiltered = this.getDataOSs(ossAll);\n        this.setState({\n          ossFiltered,\n          columns\n        });\n      } else {\n        this.unavailableServiceAlert();\n      }\n    });\n  };\n\n  getColumnsOSs = ossParam => {\n    const columns = [];\n    if (Object.keys(ossParam).length > 0) {\n      Object.keys(ossParam[0]).forEach(key => {\n        if (key !== \"_id\") {\n          columns.push({\n            accessor: key,\n            Header: key\n          });\n        }\n      });\n    }\n    return columns;\n  };\n\n  getDataOSs = ossParam => {\n    const data = ossParam.map(item => {\n      const _id = new Chance().guid();\n\n      const date = new Date(item.Data_Abertura);\n      const formatTemplate = \"DD-MM-YYYY HH:mm\";\n      const timeZone = { timeZone: \"America/Recife\" }; //TODO: The Improvement is to get timezone from the Server.\n\n      item.Data_Abertura = formatToTimeZone(date, formatTemplate, timeZone);\n\n      return {\n        _id,\n        ...item\n      };\n    });\n    return data;\n  };\n\n  defaultFilter = (filter, row, column) => {\n    const id = filter.pivotId || filter.id;\n    return row[id] !== undefined\n      ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\n      : true;\n  };\n\n  toggleSelection = (key, shift, row) => {\n    // start off with the existing state\n    let selection = [...this.state.selection];\n    const keyIndex = selection.indexOf(key);\n    // check to see if the key exists\n    if (keyIndex >= 0) {\n      // it does exist so we will remove it using destructing\n      selection = [\n        ...selection.slice(0, keyIndex),\n        ...selection.slice(keyIndex + 1)\n      ];\n    } else {\n      // it does not exist so add it\n      selection.push(key);\n    }\n    // update the state\n    this.setState({ selection });\n  };\n\n  toggleAll = () => {\n    const selectAll = this.state.selectAll ? false : true;\n    const selection = [];\n    if (selectAll) {\n      // we need to get at the internals of ReactTable\n      const wrappedInstance = this.checkboxTable.getWrappedInstance();\n      // the 'sortedData' property contains the currently accessible records based on the filter and sort\n      const currentRecords = wrappedInstance.getResolvedState().sortedData;\n      // we just push all the IDs onto the selection array\n      currentRecords.forEach(item => {\n        selection.push(item._original._id);\n      });\n    }\n    this.setState({ selectAll, selection });\n  };\n  isSelected = key => {\n    return this.state.selection.includes(key);\n  };\n  render() {\n    const { toggleSelection, toggleAll, isSelected } = this;\n    let { columns, selectAll } = this.state;\n    if (typeof columns === \"undefined\") {\n      columns = [];\n    }\n    const checkboxProps = {\n      selectAll,\n      isSelected,\n      toggleSelection,\n      toggleAll,\n      selectType: \"checkbox\"\n    };\n\n    return (\n      <form id=\"formQuestion\" onSubmit={this.handleSubmit}>\n        {this.state.errorMessage && (\n          <div className=\"alert alert-danger display-linebreak\">\n            {this.state.errorMessage}\n          </div>\n        )}\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h4 className=\"title bold\">Ordens de Serviço Registradas</h4>\n          </div>\n          <CheckboxTable\n            ref={r => (this.checkboxTable = r)}\n            filterable={true}\n            defaultFilterMethod={this.defaultFilter}\n            minRows={0}\n            data={this.state.ossFiltered}\n            columns={columns}\n            {...checkboxProps}\n            previousText={\"Anterior\"}\n            nextText={\"Próximo\"}\n            defaultPageSize={10}\n            loadingText={\"Carregando...\"}\n            noDataText={\"Lista vazia.\"}\n            pageText={\"Página\"}\n            ofText={\"de\"}\n            rowsText={\"linhas\"}\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ListOSs;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"./login.css\";\nimport { firebaseApp } from \"../../firebase\";\nimport { get, put } from \"../../util/RequestUtil\";\nimport Api from \"../../util/Endpoints\";\nimport { showMessageOK } from \"../../util/AlertDialogUtil\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\",\n      pendingRegister: false,\n      confirmationCode: \"\"\n    };\n  }\n\n  signInHandler = () => {\n    this.setState({ errorMessage: \"\" });\n    let { email, password } = this.state;\n    firebaseApp\n      .auth()\n      .signInWithEmailAndPassword(encodeURI(email), encodeURI(password))\n      .then(() => {\n        this.getUserInfo();\n      })\n      .catch(e => {\n        console.log(\"deu erro no catch\", e);\n        let message;\n        const errorCode = e.code;\n        const code = errorCode && errorCode.split(\"/\")[1];\n        switch (code) {\n          case \"wrong-password\":\n          case \"invalid-email\":\n            message = \"Email ou senha inválidos.\";\n            break;\n          case \"user-not-found\":\n            message = \"Usuário não cadastrado no sistema.\";\n            break;\n          default:\n            message = \"Falha no Login. Por favor, tente mais tarde.\";\n            break;\n        }\n        this.setState({ errorMessage: message });\n      });\n  };\n\n  getUserInfo = () => {\n    const getUserInfoAPI =\n      Api.getUserInfo + encodeURIComponent(this.state.email);\n\n    get(getUserInfoAPI, resp => {\n      const result = JSON.parse(resp);\n      if (result.code === 200 || result.code === 304) {\n        const userInfoData = result.userInfo;\n\n        if (userInfoData.status === \"Ativo\") {\n          localStorage.setItem(\"isLogged\", true);\n          localStorage.setItem(\"userInfo\", JSON.stringify(userInfoData));\n          this.props.history.push(\"/home\");\n        } else {\n          this.setState({ pendingRegister: true, userInfo: userInfoData });\n          this.loadProviders();\n        }\n      } else {\n        // This error occur in our side, or CMS problem or webservice.\n        showMessageOK(\n          \"\",\n          \"Falha no login. Por favor, tente novamente ou se o erro persistir, contactar o HelpNet suporte.\",\n          () => {\n            // for now, just ignore it.\n          }\n        );\n      }\n    });\n  };\n\n  loadProviders = () => {\n    get(Api.listProviders, resp => {\n      const providers = JSON.parse(resp);\n      const providerContent = document.getElementById(\"providerContent\");\n\n      //Create and append select list\n      const selectList = document.createElement(\"select\");\n      selectList.style[\"width\"] = \"100%\";\n      selectList.style[\"height\"] = \"30px\";\n      selectList.id = \"mySelect\";\n      providerContent.appendChild(selectList);\n\n      //Create and append the options\n      for (let i = 0; i < providers.length; i++) {\n        const option = document.createElement(\"option\");\n        option.value = providers[i].ID;\n        option.text = providers[i].NOME;\n        selectList.appendChild(option);\n      }\n    });\n  };\n\n  handlerChooseProviderAndContinue = () => {\n    const mySelect = document.getElementById(\"mySelect\");\n    const selectedProvider = mySelect.options[mySelect.selectedIndex].value;\n\n    const userParams = {};\n    userParams.userId = this.state.userInfo.id;\n    userParams.confirmationCode = this.state.confirmationCode;\n    userParams.provedorId = selectedProvider;\n\n    put(Api.updateUser, userParams, resp => {\n      const result = JSON.parse(resp);\n      if (result.code === 200) {\n        this.getUserInfo();\n      } else {\n        this.setState({ errorMessage: result.message });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"card card-container\">\n        <img\n          id=\"profile-img\"\n          className=\"profile-img-card\"\n          alt=\"Logo\"\n          src={require(\"./images/logo-default.png\")}\n        />\n        <p id=\"profile-name\" className=\"profile-name-card\" />\n\n        {!this.state.pendingRegister && (\n          <div>\n            <div id=\"form-signin\" className=\"form-signin\">\n              <input\n                type=\"email\"\n                id=\"inputEmail\"\n                className=\"form-control\"\n                placeholder=\"Endereço de email\"\n                required\n                onChange={event => this.setState({ email: event.target.value })}\n              />\n              <input\n                type=\"password\"\n                id=\"inputPassword\"\n                className=\"form-control\"\n                placeholder=\"Senha\"\n                required\n                onChange={event =>\n                  this.setState({ password: event.target.value })\n                }\n              />\n              <button\n                className=\"btn btn-lg btn-primary btn-block btn-signin\"\n                type=\"button\"\n                onClick={() => this.signInHandler()}\n              >\n                Logar\n              </button>\n            </div>\n\n            <Link className=\"general-link\" to={\"/forgotpassword\"}>\n              Esqueceu a senha?\n            </Link>\n\n            <div style={{ marginTop: \"10px\" }}>\n              Não possui cadastro?\n              <span style={{ marginLeft: \"6px\" }}>\n                <Link className=\"general-link\" to={\"/signup\"}>\n                  Cadastre-se\n                </Link>\n              </span>\n            </div>\n          </div>\n        )}\n\n        {this.state.pendingRegister && (\n          <div>\n            <p style={{ textAlign: \"start\" }} className=\"profile-name-card\">\n              Escolha o provedor:\n            </p>\n            <div style={{ marginTop: \"5px\" }} id=\"providerContent\" />\n            <input\n              type=\"text\"\n              id=\"inputCodeConfirmation\"\n              style={{ marginTop: \"10px\" }}\n              className=\"form-control\"\n              placeholder=\"Insira o código de confirmação\"\n              required\n              onChange={event =>\n                this.setState({ confirmationCode: event.target.value })\n              }\n            />\n            <button\n              style={{ marginTop: \"10px\" }}\n              className=\"btn btn-lg btn-primary btn-block btn-signin\"\n              type=\"button\"\n              onClick={() => this.handlerChooseProviderAndContinue()}\n            >\n              Continuar\n            </button>\n          </div>\n        )}\n\n        {this.state.errorMessage && (\n          <div className=\"alert alert-danger\">\n            <strong>Oops!</strong> {this.state.errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignIn);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"./login.css\";\nimport { firebaseApp } from \"../../firebase\";\nimport { get, post, put } from \"../../util/RequestUtil\";\nimport Api from \"../../util/Endpoints\";\nimport { showMessageOK } from \"../../util/AlertDialogUtil\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\",\n      pendingRegister: false,\n      confirmationCode: \"\"\n    };\n  }\n\n  signUpHandler = () => {\n    this.setState({ errorMessage: \"\" });\n\n    let { email, password } = this.state;\n    firebaseApp\n      .auth()\n      .createUserWithEmailAndPassword(encodeURI(email), encodeURI(password))\n      .then(() => {\n        const user = {};\n        user.login = this.state.email;\n        post(Api.addUser, user, resp => {\n          const result = JSON.parse(resp);\n          if (result.code === 200) {\n            this.setState({ userId: result.userId });\n            this.setState({ pendingRegister: true });\n            this.loadProviders();\n          } else {\n            showMessageOK(\n              \"\",\n              \"Falha no cadastro do usuário. Por favor, tente novamente.\",\n              () => {\n                // for now, just ignore it.\n              }\n            );\n          }\n        });\n      })\n      .catch(e => {\n        let message;\n        const errorCode = e.code;\n        const code = errorCode && errorCode.split(\"/\")[1];\n        switch (code) {\n          case \"email-already-in-use\":\n            message =\n              \"Desculpe, este email já existe em nosso sistema. Por favor, use um email diferente.\";\n            break;\n          case \"invalid-email\":\n            message = \"Email inválido.\";\n            break;\n          case \"weak-password\":\n            message = \"A senha tem de ser no mínimo 6 caracteres.\";\n            break;\n          default:\n            message = \"Falha no cadastro. Tente novamente\";\n            break;\n        }\n        this.setState({ errorMessage: message });\n      });\n  };\n\n  loadProviders = () => {\n    get(Api.listProviders, resp => {\n      const providers = JSON.parse(resp);\n      const providerContent = document.getElementById(\"providerContent\");\n\n      //Create and append select list\n      const selectList = document.createElement(\"select\");\n      selectList.style[\"width\"] = \"100%\";\n      selectList.style[\"height\"] = \"30px\";\n      selectList.id = \"mySelect\";\n      providerContent.appendChild(selectList);\n\n      //Create and append the options\n      for (let i = 0; i < providers.length; i++) {\n        const option = document.createElement(\"option\");\n        option.value = providers[i].ID;\n        option.text = providers[i].NOME;\n        selectList.appendChild(option);\n      }\n    });\n  };\n\n  handlerChooseProviderAndContinue = () => {\n    const mySelect = document.getElementById(\"mySelect\");\n    const selectedProvider = mySelect.options[mySelect.selectedIndex].value;\n\n    const userParams = {};\n    userParams.userId = this.state.userId.toString();\n    userParams.confirmationCode = this.state.confirmationCode;\n    userParams.provedorId = selectedProvider;\n\n    put(Api.updateUser, userParams, resp => {\n      const result = JSON.parse(resp);\n      if (result.code === 200) {\n        this.getUserInfo();\n      } else {\n        this.setState({ errorMessage: result.message });\n      }\n    });\n  };\n\n  getUserInfo = () => {\n    const getUserInfoAPI =\n      Api.getUserInfo + encodeURIComponent(this.state.email);\n    get(getUserInfoAPI, resp => {\n      const result = JSON.parse(resp);\n      if (result.code === 200 || result.code === 304) {\n        showMessageOK(\"\", \"Bem vindo ao HelpNet CMS!\", () => {\n          const userInfoData = result.userInfo;\n          localStorage.setItem(\"isLogged\", true);\n          localStorage.setItem(\"userInfo\", JSON.stringify(userInfoData));\n          this.props.history.push(\"/home\");\n        });\n      } else {\n        // This error occur in our side, or CMS problem or webservice.\n        showMessageOK(\n          \"\",\n          \"Falha no login. Por favor, tente novamente ou se o erro persistir, contactar o HelpNet suporte.\",\n          () => {\n            // for now, just ignore it.\n          }\n        );\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"card card-container\">\n        <img\n          id=\"profile-img\"\n          className=\"profile-img-card\"\n          alt=\"Logo\"\n          src={require(\"./images/logo-default.png\")}\n        />\n        <p id=\"dummySpace\" className=\"profile-name-card\" />\n\n        {!this.state.pendingRegister && (\n          <div>\n            <div id=\"form-signin\" className=\"form-signin\">\n              <input\n                type=\"email\"\n                id=\"inputEmail\"\n                className=\"form-control\"\n                placeholder=\"Endereço de email\"\n                required\n                onChange={event => this.setState({ email: event.target.value })}\n              />\n              <input\n                type=\"password\"\n                id=\"inputPassword\"\n                className=\"form-control\"\n                placeholder=\"Senha (no mínimo 6 caracteres)\"\n                required\n                onChange={event =>\n                  this.setState({ password: event.target.value })\n                }\n              />\n              <button\n                className=\"btn btn-lg btn-primary btn-block btn-signin\"\n                type=\"button\"\n                onClick={() => this.signUpHandler()}\n              >\n                Cadastrar\n              </button>\n            </div>\n            <div>\n              Já possui cadastro?\n              <span style={{ marginLeft: \"6px\" }}>\n                <Link className=\"general-link\" to={\"/signin\"}>\n                  Faça seu login\n                </Link>\n              </span>\n            </div>\n          </div>\n        )}\n\n        {this.state.pendingRegister && (\n          <div>\n            <p style={{ textAlign: \"start\" }} className=\"profile-name-card\">\n              Escolha o provedor:\n            </p>\n            <div style={{ marginTop: \"5px\" }} id=\"providerContent\" />\n            <input\n              type=\"text\"\n              id=\"inputCodeConfirmation\"\n              style={{ marginTop: \"10px\" }}\n              className=\"form-control\"\n              placeholder=\"Insira o código de confirmação\"\n              required\n              onChange={event =>\n                this.setState({ confirmationCode: event.target.value })\n              }\n            />\n            <button\n              style={{ marginTop: \"10px\" }}\n              className=\"btn btn-lg btn-primary btn-block btn-signin\"\n              type=\"button\"\n              onClick={() => this.handlerChooseProviderAndContinue()}\n            >\n              Continuar\n            </button>\n          </div>\n        )}\n\n        {this.state.errorMessage && (\n          <div style={{ marginTop: \"10px\" }} className=\"alert alert-danger\">\n            <strong>Oops!</strong> {this.state.errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignUp);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./login.css\";\nimport { firebaseApp } from \"../../firebase\";\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      errorMessage: \"\",\n      emailSent: false\n    };\n  }\n\n  forgotPasswordHandler = () => {\n    const emailFilled = this.state.email;\n    firebaseApp\n      .auth()\n      .sendPasswordResetEmail(emailFilled)\n      .then(() => {\n        // Email sent.\n        this.setState({ emailSent: true });\n      })\n      .catch(e => {\n        // An error happened.\n        let message;\n        const errorCode = e.code;\n        const code = errorCode && errorCode.split(\"/\")[1];\n        switch (code) {\n          case \"invalid-email\":\n            message = \"Email inválido.\";\n            break;\n          case \"user-not-found\":\n            message =\n              \"Não foi possível encontrar uma conta do HelpNet associada a \" +\n              emailFilled;\n            break;\n          default:\n            message = \"Falha na solicitação. Por favor, contactar o suporte.\";\n            break;\n        }\n        this.setState({ errorMessage: message });\n      });\n  };\n\n  goToSignPage = () => {\n    this.props.history.push(\"/signin\");\n  };\n\n  render() {\n    return (\n      <div className=\"card card-container\">\n        {!this.state.emailSent && (\n          <div>\n            <h3>Vamos encontrar sua conta</h3>\n            <p style={{ marginTop: \"16px\" }}>Por favor, preencha seu email.</p>\n\n            <div id=\"form-signin\" className=\"form-signin\">\n              <input\n                type=\"email\"\n                id=\"inputEmail\"\n                className=\"form-control\"\n                placeholder=\"Endereço de email\"\n                required\n                onChange={event => this.setState({ email: event.target.value })}\n              />\n              <button\n                className=\"btn btn-lg btn-primary btn-block btn-signin\"\n                type=\"button\"\n                onClick={() => this.forgotPasswordHandler()}\n              >\n                Procurar\n              </button>\n\n              <button\n                className=\"btn btn-lg btn-block btn-signin-cancel\"\n                type=\"button\"\n                onClick={() => this.goToSignPage()}\n              >\n                Cancelar\n              </button>\n\n              {this.state.errorMessage && (\n                <div className=\"alert alert-danger\">\n                  <strong>Oops!</strong> {this.state.errorMessage}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        {this.state.emailSent && (\n          <div>\n            <h3>Enviamos um link para o seu email!</h3>\n            <p style={{ marginTop: \"16px\", fontSize: \"18px\" }}>\n              Por favor, verifique seu email e siga as instruções.\n            </p>\n\n            <button\n              className=\"btn btn-lg btn-primary btn-block btn-signin\"\n              type=\"button\"\n              onClick={() => this.goToSignPage()}\n            >\n              Finalizar\n            </button>\n\n            <p style={{ marginTop: \"20px\", fontSize: \"14px\" }}>\n              Dica: Se não consegue encontrar o email que enviamos, verifique\n              seus spams.\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ForgotPassword);\n","import React, { Component } from \"react\";\n\nclass Error404 extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"text-center\">\n          <h5 className=\"title\">A página solicitada, não foi encontrada.</h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Error404;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Switch from \"react-router-dom/Switch\";\n\nimport NavBar from \"./../components/NavBar/NavBar\";\nimport Home from \"./../components/Home/Home\";\nimport MyData from \"./../components/MyData/MyData\";\nimport SendNotification from \"./../components/SendNotification/SendNotification\";\nimport ListNotification from \"./../components/ListNotification/ListNotification\";\nimport ListOS from \"./../components/ListOS/ListOS\";\nimport SignIn from \"./../components/Login/SignIn\";\nimport SignUp from \"./../components/Login/SignUp\";\nimport ForgotPassword from \"./../components/Login/ForgotPassword\";\nimport Page404 from \"./../components/Errors/Error404\";\n\nconst AuthRoute = function({ Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        JSON.parse(localStorage.getItem(\"isLogged\")) ? (\n          <div>\n            <NavBar />\n            <Component />\n          </div>\n        ) : (\n          <SignIn />\n        )\n      }\n    />\n  );\n};\n\nconst NonAuthRoute = function({ Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        JSON.parse(localStorage.getItem(\"isLogged\")) ? <Home /> : <Component />\n      }\n    />\n  );\n};\n\nexport default () => (\n  <BrowserRouter>\n    <div>\n      <div className=\"container\">\n        <Switch>\n          <AuthRoute exact path=\"/\" Component={Home} />\n          <AuthRoute exact path=\"/app\" Component={Home} />\n          <AuthRoute exact path=\"/home\" Component={Home} />\n          <AuthRoute exact path=\"/myData\" Component={MyData} />\n          <AuthRoute\n            exact\n            path=\"/sendNotification\"\n            Component={SendNotification}\n          />\n          <AuthRoute\n            exact\n            path=\"/listNotification\"\n            Component={ListNotification}\n          />\n          <AuthRoute exact path=\"/ListOS\" Component={ListOS} />\n          <NonAuthRoute exact path=\"/signin\" Component={SignIn} />\n          <NonAuthRoute exact path=\"/signup\" Component={SignUp} />\n          <NonAuthRoute\n            exact\n            path=\"/forgotpassword\"\n            Component={ForgotPassword}\n          />\n          <Route component={Page404} />\n        </Switch>\n      </div>\n    </div>\n  </BrowserRouter>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"content\")\n);\nregisterServiceWorker();\n","import React from \"react\";\nimport \"./App.css\";\nimport Routes from \"./routes/index\";\n\nexport default () => <Routes />;\n","module.exports = __webpack_public_path__ + \"static/media/logo-default.c8e0db0d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-default.c8e0db0d.png\";"],"sourceRoot":""}